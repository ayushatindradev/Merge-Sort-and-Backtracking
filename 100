#include<iostream>
#include<vector>
#include<algorithm>
#include<climits>
#include<cmath>
#include<string>
#include<queue>
using namespace std;

void merge(int arr[],int start,int mid ,int end){
    vector<int> temp(end - start + 1);
    int left =start ,right = mid+1;
    int index =0;
    while(left<=mid && right <=end)
    {
        if(arr[left]<arr[right]){
            temp[index]=arr[left];
            left++;
            index++;
        }
        else{
            temp[index]=arr[right];
            right++;
            index++;
        }
    }
    while(left<=mid){
        temp[index]=arr[left];
        left++;
        index++;
    }
    while(right<=end){
        temp[index]=arr[right];
        right++;
        index++;

    }
    // copying the temp array to original array
    for(int i=0;i<temp.size();i++){
        arr[start+i]=temp[i];
    }
}
void mergeSort(int arr[],int start ,int end){
    if(start<end){
       int mid = (start+end)/2;
       mergeSort(arr,start,mid);
       mergeSort(arr,mid+1,end);
       merge(arr,start,mid,end);
    }
}
int main(){
    int arr[]={1,2,3,4,5,1,3,4};
    int size = sizeof(arr)/sizeof(arr[0]);
    int start = 0;
    int end = size - 1;
    mergeSort(arr,start,end);
    for(int i=0;i<size;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
    
}
